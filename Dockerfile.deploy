# syntax=docker/dockerfile:1.7-labs
FROM ros:humble

SHELL ["/bin/bash", "-c"]

ARG FOLDER_NAME=rc-brain
ARG WORKSPACE_DIR=/home/cev
WORKDIR $WORKSPACE_DIR

# Source the ROS2 environment automatically when a new shell is created
RUN echo "source /opt/ros/$ROS_DISTRO/setup.bash" >> ~/.bashrc
RUN echo "source $WORKSPACE_DIR/install/setup.bash" >> ~/.bashrc

# Init rosdep and update package index
# for some reason we need to do this
RUN rm /var/lib/dpkg/info/libc-bin.* 
RUN apt-get clean
RUN apt-get update
RUN apt-get install libc-bin
RUN rosdep update --rosdistro $ROS_DISTRO

RUN mkdir -p src/$FOLDER_NAME

# Install and build build-from-source packages
# We do this as a separate step from the stuff for our code, since that changes more frequently
RUN cd src && \
    git clone https://github.com/Slamtec/sllidar_ros2.git && \
    cd sllidar_ros2 && \
    git checkout 3430009
RUN source /opt/ros/$ROS_DISTRO/setup.bash && rosdep install --from-paths src -r -y
RUN source /opt/ros/$ROS_DISTRO/setup.bash && colcon build

# Install self dependencies with rosdep
COPY --parents ./*/package.xml src/$FOLDER_NAME
RUN source /opt/ros/$ROS_DISTRO/setup.bash && rosdep install --from-paths src -r -y

# Clean up apt cache to make container smaller
RUN apt-get clean

# Build
COPY . src/$FOLDER_NAME
RUN source /opt/ros/$ROS_DISTRO/setup.bash && colcon build

# Copy entrypoint script
COPY entrypoint.sh entrypoint.sh
RUN chmod +x entrypoint.sh
ENTRYPOINT ["/bin/bash", "/home/cev/entrypoint.sh"]
